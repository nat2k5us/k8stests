basePath: /v3
consumes:
  - application/json
definitions:
  Account:
    description:
      Account contains brokerage account information for individual brokerage
      accounts
    properties:
      AccountDetail:
        $ref: "#/definitions/AccountDetail"
      AccountID:
        description: TradeStation account ID.
        type: string
      AccountType:
        description: |-
          Type of the account
          C : Cash
          M : Margin
          F : Futures
          D : DVP
        type: string
      Alias:
        description: A user specified name that identifies a TradeStation account
        type: string
      AltID:
        description: TradeStation Alternate ID.
        type: string
      Currency:
        description: The currency
        type: string
      Status:
        description: |-
          Status of a specific account.
          Active
          Closed
          Closing Transaction Only
          Margin Call - Closing Transactions Only
          Inactive
          Liquidating Transactions Only
          Restricted
          90 Day Restriction-Closing Transaction Only
        type: string
    type: object
  AccountDetail:
    description:
      accountDetail contains detailed information about specific accounts
      depending on account type
    properties:
      CryptoEnabled:
        description: Is Crypto Trading Enabled
        type: boolean
      DayTradingQualified:
        description: Is Day Trading Qualified
        type: boolean
      EnrolledInRegTProgram:
        description: Enrolled In Reg T Program
        type: boolean
      IsStockLocateEligible:
        description: Is Stock Locate Eligible
        type: boolean
      OptionApprovalLevel:
        description: |-
          Valid values: 0 1 2 3 4 5
          (Equities) The option approval level will determine what options strategies you will be able to employ in the account. In general terms, the levels are defined as follows
          Level 0 - No options trading allowed.
          Level 1 - Writing of Covered Calls, Buying Protective Puts.
          Level 2 - Level 1 + Buying Calls, Buying Puts, Writing Covered Puts.
          Level 3 - level 2+ Stock Option Spreads, Index Option Spreads, Butterfly Spreads, Condor Spreads, Iron Butterfly Spreads, Iron Condor Spreads.
          Level 4 - Level 3 + Writing of Naked Puts (Stock Options).
          Level 5 - Level 4 + Writing of Naked Puts (Index Options), Writing of Naked Calls (Stock Options), Writing of Naked Calls (Index Options).
        format: int64
        type: integer
      PatternDayTrader:
        description:
          (Equities) Indicates whether you are considered a pattern day
          trader. As per FINRA rules, you will be considered a pattern day trader
          if you trade 4 or more times in 5 business days and your day-trading activities
          are greater than 6 percent of your total trading activity for that same
          five-day period. A pattern day trader must maintain a minimum equity of
          $25,000 on any day that the customer day trades. If the account falls below
          the $25,000 requirement, the pattern day trader will not be permitted to
          day trade until the account is restored to the $25,000 minimum equity level.
        type: boolean
      RequiresBuyingPowerWarning:
        description: Requires Buying Power Warning
        type: boolean
    type: object
  Accounts:
    description:
      Accounts contains brokerage account information for the identified
      user
    properties:
      Accounts:
        items:
          $ref: "#/definitions/Account"
        type: array
    type: object
  AdvancedOption:
    description: AdvancedOption for an order
    properties:
      ShowOnlyQuantity:
        description: Show only quantity
        type: string
      TrailingStop:
        $ref: "#/definitions/TrailingStop"
    type: object
  AdvancedOrderType:
    description: AdvancedOrderType is the type of the advanced order
    type: string
    enum:
      - NORMAL
      - BRK
      - OCO
  AssetType:
    title:
      "AssetType is an enum type to classify symbols based on their basic type:
      Equity, Future, Option, or Forex."
    type: string
    enum:
      - UNKNOWN
      - STOCK
      - STOCKOPTION
      - FUTURE
      - FUTUREOPTION
      - FOREX
      - CURRENCYOPTION
      - INDEX
      - INDEXOPTION
      - MUTUALFUND
      - MONEYMARKETFUND
      - BOND
      - CRYPTO
  BODBalance:
    description:
      bodBalance contains beginning of day balance information for a single
      account
    properties:
      AccountID:
        description: The account ID of this account
        type: string
      AccountType:
        description: The account type of this account
        type: string
      BalanceDetail:
        $ref: "#/definitions/BODBalanceDetail"
      CurrencyDetails:
        items:
          $ref: "#/definitions/BODCurrencyDetail"
        type: array
    type: object
  BODBalanceDetail:
    description:
      bodBalanceDetail contains detailed beginning of day balance information
      which varies according to account type
    properties:
      AccountBalance:
        $ref: "#/definitions/Decimal"
      DayTradingMarginableBuyingPower:
        $ref: "#/definitions/Decimal"
      OpenTradeEquity:
        $ref: "#/definitions/Decimal"
      OptionBuyingPower:
        $ref: "#/definitions/Decimal"
      OptionValue:
        $ref: "#/definitions/Decimal"
      OvernightBuyingPower:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: Overnight Buying power
    type: object
  BODCurrencyDetail:
    description:
      bodCurrencyDetail contains beginning of day currency detail information
      which varies according to account type
    properties:
      AccountMarginRequirement:
        $ref: "#/definitions/Decimal"
      AccountOpenTradeEquity:
        $ref: "#/definitions/Decimal"
      AccountSecurities:
        $ref: "#/definitions/Decimal"
      CashBalance:
        $ref: "#/definitions/Decimal"
      Currency:
        description: The currency of the entity
        type: string
      MarginRequirement:
        $ref: "#/definitions/Decimal"
      OpenTradeEquity:
        $ref: "#/definitions/Decimal"
      Securities:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: Securities on Deposit
    type: object
  Balance:
    description: balance contains realtime balance information for a single account
    properties:
      AccountID:
        description: Name of the account
        type: string
      AccountType:
        description: The account type of this account
        type: string
      BalanceDetail:
        $ref: "#/definitions/BalanceDetail"
      BuyingPower:
        $ref: "#/definitions/Decimal"
      CashBalance:
        $ref: "#/definitions/Decimal"
      CurrencyDetails:
        items:
          $ref: "#/definitions/CurrencyDetail"
        type: array
      Equity:
        $ref: "#/definitions/Decimal"
      MarketValue:
        $ref: "#/definitions/Decimal"
      TodaysProfitLoss:
        $ref: "#/definitions/Decimal"
      UnclearedDeposit:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: Uncleared Deposit
    type: object
  BalanceDetail:
    description:
      balanceDetail contains realtime balance information that varies according
      to account type
    properties:
      CostOfPositions:
        $ref: "#/definitions/Decimal"
      DayTradeExcess:
        $ref: "#/definitions/Decimal"
      DayTradeMargin:
        $ref: "#/definitions/Decimal"
      DayTradeOpenOrderMargin:
        $ref: "#/definitions/Decimal"
      InitialMargin:
        $ref: "#/definitions/Decimal"
      MaintenanceMargin:
        $ref: "#/definitions/Decimal"
      MaintenanceRate:
        $ref: "#/definitions/Decimal"
      MarginRequirement:
        $ref: "#/definitions/Decimal"
      OpenOrderMargin:
        $ref: "#/definitions/Decimal"
      OptionBuyingPower:
        $ref: "#/definitions/Decimal"
      OptionsMarketValue:
        $ref: "#/definitions/Decimal"
      OvernightBuyingPower:
        $ref: "#/definitions/Decimal"
      RealizedProfitLoss:
        $ref: "#/definitions/Decimal"
      RequiredMargin:
        $ref: "#/definitions/Decimal"
      SecurityOnDeposit:
        $ref: "#/definitions/Decimal"
      TodayRealTimeTradeEquity:
        $ref: "#/definitions/Decimal"
      TradeEquity:
        $ref: "#/definitions/Decimal"
      UnrealizedProfitLoss:
        $ref: "#/definitions/Decimal"
      UnsettledFunds:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: Unsettled Funds are funds that have been closed but not settled.
    type: object
  Balances:
    description: Balances contains a collection of realtime balance information
    properties:
      Balances:
        items:
          $ref: "#/definitions/Balance"
        type: array
    type: object
  BalancesBOD:
    description: BalancesBOD is colleciton of beginning of day balance information
    properties:
      BODBalances:
        items:
          $ref: "#/definitions/BODBalance"
        type: array
    type: object
  Bar:
    description: |-
      Bar is contract for Barcharts
      If you add, remove or alter any fields, also update the Equals() function.
    properties:
      Close:
        $ref: "#/definitions/Decimal"
      DownTicks:
        description: The downticks in the bar
        format: uint64
        type: integer
      DownVolume:
        description: The down volume in the bar
        format: uint64
        type: integer
      Epoch:
        description: The Epoch time
        format: int64
        type: integer
      High:
        $ref: "#/definitions/Decimal"
      IsEndOfHistory:
        description: Is this the end of history bar
        type: boolean
      IsRealtime:
        description: Is real time
        type: boolean
      Low:
        $ref: "#/definitions/Decimal"
      Open:
        $ref: "#/definitions/Decimal"
      OpenInterest:
        $ref: "#/definitions/Decimal"
      Symbol:
        description: The symbol of the bar
        type: string
      TimeStamp:
        $ref: "#/definitions/Date"
      TotalTicks:
        description: Total ticks in the bar
        format: uint64
        type: integer
      TotalVolume:
        $ref: "#/definitions/Decimal"
      UnchangedTicks:
        description: Any unchanged ticks in the bar
        format: uint64
        type: integer
      UnchangedVolume:
        description: Any unchanged volume in the bar
        format: uint64
        type: integer
      UpTicks:
        description: Upticks in the bar
        format: uint64
        type: integer
      UpVolume:
        description: Up volume in the bar
        format: uint64
        type: integer
      heartbeat:
        description: The heart beat
        format: uint64
        type: integer
      "0":
        type: string
        description: 0
    type: object
  Bars:
    description: Bars is container for historical bars
    properties:
      Bars:
        items:
          $ref: "#/definitions/Bar"
        type: array
    type: object
  CallPut:
    description: CallPut defines whether an option is a call or a put
    type: string
    enum:
      - CALL
      - PUT
      - NA
  CurrencyDetail:
    description:
      currencyDetail contains currency detail information which varies
      according to account type
    properties:
      AccountConversionRate:
        $ref: "#/definitions/Decimal"
      AccountMarginRequirement:
        $ref: "#/definitions/Decimal"
      CashBalance:
        $ref: "#/definitions/Decimal"
      Commission:
        $ref: "#/definitions/Decimal"
      Currency:
        description: Currency is the currency this account is traded in
        type: string
      InitialMargin:
        $ref: "#/definitions/Decimal"
      MaintenanceMargin:
        $ref: "#/definitions/Decimal"
      RealizedProfitLoss:
        $ref: "#/definitions/Decimal"
      UnrealizedProfitLoss:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: Unrealized Profit and Loss
    type: object
  Date:
    description: Date - Timestamp represented as date
    type: object
  Decimal:
    title:
      Decimal represents a decimal number, which is a precise decimal representation
      not subject to floating point issues.
    type: string
  Duration:
    description: Duration defines the duration that can be sent to or received
    type: string
    enum:
      - DAY
      - DYP
      - GTC
      - GCP
      - GTD
      - GDP
      - OPG
      - CLO
      - IOC
      - FOK
      - 1
      - 3
      - 5
  ErrorResponse:
    description: ErrorResponse contains error details for sending response objects
    properties:
      Error:
        description:
          Error Title "BadRequest", "Unauthorized", "Forbidden", "TooManyRequests","InternalServerError",
          "NotImplemented","ServiceUnavailable","GatewayTimeout"
        type: string
      Message:
        description: The description of the error
        type: string
      TraceID:
        description: TraceID is a GUID string used for tracing the error
        type: string
    type: object
  GroupOrderRequest:
    description:
      GroupOrderRequest defines the request for placing a group trade through
      WebAPI
    properties:
      Orders:
        items:
          $ref: "#/definitions/OrderRequest"
        type: array
      Type:
        description: The group order type
        type: string
    type: object
  IncrementScheduleRow:
    description: |-
      IncrementScheduleRow describes a threshold where prices above or equal to the StartsAt threshold will increment at the
      Increment value defined. A series of rows are provided to build a table to the IncrementSchedule() scheme option.
    properties:
      Increment:
        $ref: "#/definitions/Decimal"
      StartsAt:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: The initial value to start incrementing from
    type: object
  MarketFlags:
    description: MarketFlags represents market specific info for a symbol
    properties:
      IsBats:
        description: Is Bats
        type: boolean
      IsDelayed:
        description: Is delayed
        type: boolean
      IsHalted:
        description: Is halted
        type: boolean
      IsHardToBorrow:
        description: Is Hard to borrow
        type: boolean
    type: object
  Order:
    properties:
      AccountID:
        description:
          ID that identifies a specific TradeStation account that is being
          used for a particular order.
        type: string
      AdvancedOptions:
        description: |-
          Valid Values : "Activation Rule" "All or None""Trailing Stop""If Touched""Show Only""Discretionary""Non-Display""Peg""Book Only""Add Liquidity"
          Will display a value when the order has advanced order rules associated with it or is part of a bracket order.
        type: string
      ClosedDateTime:
        description: The Closed Date Time of this order
        format: date-time
        type: string
      CommissionFee:
        $ref: "#/definitions/Decimal"
      ConversionRate:
        $ref: "#/definitions/Decimal"
      Duration:
        description: The duration for this order
        type: string
      FilledPrice:
        $ref: "#/definitions/Decimal"
      GoodTillDate:
        description: The order is good until
        format: date-time
        type: string
      GroupName:
        description: It can be used to identify orders that are part of the same bracket.
        type: string
      Legs:
        description: An array of legs associated with this order
        items:
          $ref: "#/definitions/OrderLeg"
        type: array
      LimitPrice:
        $ref: "#/definitions/Decimal"
      OpenedDateTime:
        description: The opened date time
        format: date-time
        type: string
      OrderID:
        description: The order ID of this order
        type: string
      OrderType:
        $ref: "#/definitions/OrderType"
      PriceUsedForBuyingPower:
        $ref: "#/definitions/Decimal"
      RejectReason:
        description: Rejection Reason
        type: string
      Routing:
        description:
          Identifies the routing selection made by the customer when placing
          the order.
        type: string
      ShowOnlyQuantity:
        description:
          This option allows you to hide the true number of shares that
          you wish to buy or sell.
        type: string
      Spread:
        description: The spread type for an option order.
        type: string
      Status:
        $ref: "#/definitions/Status"
      StatusDescription:
        description: Description of the status
        type: string
      StopPrice:
        $ref: "#/definitions/Decimal"
      TrailingStop:
        $ref: "#/definitions/TrailingStop"
      TriggeredBy:
        description: This order is trigged by
        type: string
      UnbundledRouteFee:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: Will contain a value if the order has received a routing fee.
    title: Order object represents a Brokerage order.
    type: object
  OrderConfirmLeg:
    description: OrderConfirmLeg is a leg in order confirm requests
    properties:
      Quantity:
        $ref: "#/definitions/Decimal"
      Symbol:
        type: string
      TradeAction:
        $ref: "#/definitions/TradeAction"
      "0":
        type: string
        description: 0
    type: object
  OrderConfirmOSO:
    description: OrderConfirmOSO is an OSO used in order confirm requests
    properties:
      Orders:
        items:
          $ref: "#/definitions/OrderConfirmRequest"
        type: array
      Type:
        $ref: "#/definitions/AdvancedOrderType"
    type: object
  OrderConfirmRequest:
    properties:
      AccountID:
        description: The account ID
        type: string
      AdvancedOptions:
        $ref: "#/definitions/AdvancedOption"
      AssetType:
        $ref: "#/definitions/AssetType"
      Legs:
        items:
          $ref: "#/definitions/OrderConfirmLeg"
        type: array
      LimitPrice:
        description: The limit price for this order
        type: string
      OSOs:
        items:
          $ref: "#/definitions/OrderConfirmOSO"
        type: array
      OrderType:
        $ref: "#/definitions/OrderType"
      Quantity:
        description: The quantity of the order
        type: string
      Route:
        description: The route of the order
        type: string
      Spread:
        description: The option spread of this order
        type: string
      StopPrice:
        description: The stop price for this order
        type: string
      Symbol:
        description: The symbol for the order
        type: string
      TimeInForce:
        $ref: "#/definitions/TimeInForce"
      TradeAction:
        $ref: "#/definitions/TradeAction"
    title:
      OrderConfirmRequest defines the request used to WebAPI for confirming an
      order.
    type: object
  OrderConfirmResponse:
    description:
      OrderConfirmResponse definition. The response will also contain asset-specific
      fields
    properties:
      AccountCurrency:
        description: The curreny the account is traded in
        type: string
      AccountID:
        description: The account information
        type: string
      AssetType:
        $ref: "#/definitions/AssetType"
      BaseCurrency:
        description: The base currency
        type: string
      BaseSymbolName:
        description: Name of the base symbol
        type: string
      CounterCurrency:
        description: The counter currency
        type: string
      Currency:
        description: The currency used in this transaction
        type: string
      DebitCreditEstimatedCost:
        $ref: "#/definitions/Decimal"
      DisplayName:
        description: The display name
        type: string
      EstimatedCommission:
        $ref: "#/definitions/Decimal"
      EstimatedCost:
        $ref: "#/definitions/Decimal"
      EstimatedPrice:
        $ref: "#/definitions/Decimal"
      InitialMarginDisplay:
        description: Initial margin displayed for this transaction
        type: string
      Legs:
        items:
          $ref: "#/definitions/OrderConfirmResponseLeg"
        type: array
      LimitPrice:
        $ref: "#/definitions/Decimal"
      OrderConfirmID:
        description: The confirmation ID of this order
        type: string
      ProductCurrency:
        description: The currency of the product
        type: string
      Route:
        description: The route of this transaction
        type: string
      ShowOnlyQuantity:
        description: Show only quantity
        format: int64
        type: integer
      Spread:
        description: The option spread
        type: string
      StopPrice:
        $ref: "#/definitions/Decimal"
      SummaryMessage:
        description: Summary message
        type: string
      TimeInForce:
        $ref: "#/definitions/TimeInForce"
      TrailingStop:
        $ref: "#/definitions/TrailingStop"
      UnderlyingSymbolName:
        description: Underlying symbol name
        type: string
      "0":
        type: string
        description: 0
    type: object
  OrderConfirmResponseLeg:
    description:
      OrderConfirmResponseLeg defines an object that is returned from order
      confirm in WebAPI
    properties:
      ExpirationDate:
        description: The expiration time for this order
        format: date-time
        type: string
      OptionType:
        $ref: "#/definitions/CallPut"
      Quantity:
        description: The quantity
        type: string
      StrikePrice:
        description: The strike price for this option
        type: string
      Symbol:
        description: The symbol name associated with this option
        type: string
      TradeAction:
        $ref: "#/definitions/TradeAction"
    type: object
  OrderConfirmResponses:
    description: OrderConfirmResponses is collection of OrderConfirmResponse objects
    properties:
      Confirmations:
        items:
          $ref: "#/definitions/OrderConfirmResponse"
        type: array
    type: object
  OrderLeg:
    description: OrderLeg is an object returned from WebAPI
    properties:
      BuyOrSell:
        description: Is this a buy or sell leg
        type: string
      ExecQuantity:
        $ref: "#/definitions/Decimal"
      OpenOrClose:
        description: What kind of order leg - Opening or Closing
        type: string
      QuantityOrdered:
        $ref: "#/definitions/Decimal"
      QuantityRemaining:
        $ref: "#/definitions/Decimal"
      Symbol:
        description: Option associated with this leg
        type: string
      Underlying:
        description: Underlying Symbol associated with this option leg
        type: string
      "0":
        type: string
        description: 0
    type: object
  OrderReplaceRequest:
    description:
      OrderReplaceRequest defines the request for replacing a trade through
      WebAPI
    properties:
      AccountID:
        description: The account Id for this order
        type: string
      AdvancedOptions:
        $ref: "#/definitions/AdvancedOption"
      AssetType:
        $ref: "#/definitions/AssetType"
      Legs:
        items:
          $ref: "#/definitions/OrderRequestLegs"
        type: array
      LimitPrice:
        description: The limit price for this order
        type: string
      OSOs:
        items:
          $ref: "#/definitions/OrderRequestOSO"
        type: array
      OrderID:
        description: The order ID for this order
        type: string
      OrderType:
        $ref: "#/definitions/OrderType"
      Quantity:
        description: The quantity of the order
        type: string
      Route:
        description: The route of the order
        type: string
      StopPrice:
        description: The stop price for this order
        type: string
      Symbol:
        description: The symbol of the order
        type: string
      TimeInForce:
        $ref: "#/definitions/TimeInForce"
      TradeAction:
        $ref: "#/definitions/TradeAction"
    type: object
  OrderRequest:
    description: OrderRequest defines the request for placing a trade through WebAPI
    properties:
      AccountID:
        description: The account id
        type: string
      AdvancedOptions:
        $ref: "#/definitions/AdvancedOption"
      AssetType:
        $ref: "#/definitions/AssetType"
      BuyingPowerWarning:
        description: The buying power warning for this order
        type: string
      Legs:
        items:
          $ref: "#/definitions/OrderRequestLegs"
        type: array
      LimitPrice:
        description: The limit price for this order
        type: string
      OSOs:
        items:
          $ref: "#/definitions/OrderRequestOSO"
        type: array
      OrderConfirmID:
        description: The corfirmation ID for this order
        type: string
      OrderType:
        $ref: "#/definitions/OrderType"
      Quantity:
        description: The quantity of the order
        type: string
      Route:
        description: The route of the order
        type: string
      StopPrice:
        description: The stop price for this order
        type: string
      Symbol:
        description: The symbol used for this order
        type: string
      TimeInForce:
        $ref: "#/definitions/TimeInForce"
      TradeAction:
        $ref: "#/definitions/TradeAction"
    type: object
  OrderRequestLegs:
    description: OrderRequestLegs defines the legs for placing a trade on WebAPI
    properties:
      Quantity:
        $ref: "#/definitions/Decimal"
      Symbol:
        type: string
      TradeAction:
        $ref: "#/definitions/TradeAction"
      "0":
        type: string
        description: Quantity of the order.
    type: object
  OrderRequestOSO:
    description: OrderRequestOSO defines OSOs for placing a trade on WebAPI
    properties:
      Orders:
        items:
          $ref: "#/definitions/OrderRequest"
        type: array
      Type:
        $ref: "#/definitions/AdvancedOrderType"
    type: object
  OrderResponse:
    description: OrderResponse is the response from placing a trade (OrderRequest)
    properties:
      Message:
        description: The response message of the order
        type: string
      OrderID:
        description: The Order ID of the order
        type: string
      Result:
        $ref: "#/definitions/OrderResponseResult"
    type: object
  OrderResponseResult:
    description: OrderResponseResult is the result of an order response
    type: integer
    enum:
      - OK
      - FAIL
  OrderType:
    description: OrderType defines an OrderType type
    type: string
    enum:
      - LIMIT
      - STOPMARKET
      - MARKET
      - STOPLIMIT
  Orders:
    properties:
      Errors:
        items:
          $ref: "#/definitions/orderErrorResponse"
        type: array
      Orders:
        items:
          $ref: "#/definitions/Order"
        type: array
    title: Orders is an object .
    type: object
  Position:
    description: Position represents a position that is returned for an Account
    properties:
      AccountID:
        type: string
      AveragePrice:
        $ref: "#/definitions/Decimal"
      ConversionRate:
        $ref: "#/definitions/Decimal"
      DayTradeRequirement:
        $ref: "#/definitions/Decimal"
      InitialRequirement:
        $ref: "#/definitions/Decimal"
      LongShort:
        $ref: "#/definitions/PositionDirection"
      PositionID:
        type: string
      Quantity:
        $ref: "#/definitions/Decimal"
      Symbol:
        type: string
      Timestamp:
        format: date-time
        type: string
      TotalCost:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description:
          The total cost denominated in the account currency of the open
          position.
    type: object
  PositionDirection:
    description:
      "PositionDirection represents whether a position is long or short\nvalid
      values:\t\"Long\"\"Short\"\nSpecifies if the position is Long or Short\nA Long
      position is when the holder buys an option to open a position, and where the
      number or price of options bought exceeds the number or price of options sold\nA
      Short position is when the writer sells an option to open a position, and where
      the number or price of options sold exceeds the number or price of options bought"
    type: string
    enum:
      - LONG
      - SHORT
  Positions:
    description: Positions contains a collection of Position
    properties:
      Positions:
        items:
          $ref: "#/definitions/Position"
        type: array
    type: object
  QuoteStream:
    description: Quote returns current price data for a symbol
    properties:
      Ask:
        $ref: "#/definitions/Decimal"
      AskSize:
        $ref: "#/definitions/Decimal"
      Bid:
        $ref: "#/definitions/Decimal"
      BidSize:
        $ref: "#/definitions/Decimal"
      Close:
        $ref: "#/definitions/Decimal"
      DailyOpenInterest:
        $ref: "#/definitions/Decimal"
      DataFeed:
        description: DataFeed
        type: string
      Error:
        description: Message if there's an error
        type: string
      Halted:
        description: Halted
        type: boolean
      High:
        $ref: "#/definitions/Decimal"
      High52Week:
        $ref: "#/definitions/Decimal"
      High52WeekTimestamp:
        description: 52 week high price time stamp
        type: string
      Last:
        $ref: "#/definitions/Decimal"
      LastTradingDate:
        description: LastTradingDate displayed as string
        type: string
      Low:
        $ref: "#/definitions/Decimal"
      Low52Week:
        $ref: "#/definitions/Decimal"
      Low52WeekTimestamp:
        description: 52 week low price time stamp
        type: string
      MarketFlags:
        $ref: "#/definitions/MarketFlags"
      MarketFlagsDisplay:
        description: MarketFlagsDisplay
        type: string
      NetChange:
        $ref: "#/definitions/Decimal"
      NetChangePct:
        $ref: "#/definitions/Decimal"
      Open:
        $ref: "#/definitions/Decimal"
      PreviousClose:
        $ref: "#/definitions/Decimal"
      PreviousVolume:
        $ref: "#/definitions/Decimal"
      Restrictions:
        description: Restriction if any returns array
        items:
          type: string
        type: array
      Symbol:
        description: Symbol name
        type: string
      TickSizeTier:
        $ref: "#/definitions/Decimal"
      TradeTime:
        description: DailyTime displayed as string
        type: string
      Volume:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description: 0
    type: object
  SchemeDescriptor:
    description: |-
      SchemeDescriptor describes the schema
      swagger: model
    properties:
      Decimals:
        description: The number of decimals
        type: string
      Format:
        description: The format of the symbol
        type: string
      Fraction:
        description: The fractional component
        type: string
      Increment:
        description: The increments allowed
        type: string
      IncrementSchedule:
        items:
          $ref: "#/definitions/IncrementScheduleRow"
        type: array
      IncrementStyle:
        description: The incremental style
        type: string
      SubFraction:
        description: The subfractional component
        type: string
    type: object
  Status:
    description: |-
      Status defines an Status type
      OPN, ACK, UCN = Open Orders -- New order request pending, cancel request pending
      FLL, FLP = Filled Orders -- Partially-Filled and remaining canceled
      FPR = Partially Filled Orders - still alive
      OUT = Canceled Orders - UROut
      REJ, TSC = Rejected Orders -- It is an internal server(s) unsolicited cancel, not final status
      EXP = Expired Orders - time constraint
      BRO = Broken Orders -- Not necessarily the order’s final status since later it may be reinstated to open
      CAN = Exch. Canceled Orders
      LAT = Too Late Orders, Too late to cancel -- Not the order’s final status
      DON = Queued Orders - Done for day
      ASS = Option Assignment
      BRC = Bracket Cancelled
      BRF = Bracket Filled
      CND = Condition Hit
      COR = Fill Corrected
      DIS = Order Dispatched
      DOA = Dead
      ECN = Expiration cancel request
      EXE = Option excercise
      OSO = OSO order
      REC = Big Brother Recal request
      RJC = Cancel request rejected
      RJR = Change request rejected
      SCN = Big brother recall
      STP = Stop price hiy
      STT = Order status message
      UCH = Order change requested by customer
      UCN = Order cancellation requested by customer
    type: string
    enum:
      - ACK
      - BRO
      - CAN
      - CHG
      - DIS
      - DOA
      - EXP
      - FLL
      - FLP
      - FPR
      - LAT
      - OPN
      - OUT
      - REJ
      - STT
      - UCH
      - UCN
      - COR
      - TSC
      - PLA
      - RJC
      - UNSENT
      - DON
      - RJR
      - STP
      - RSN
      - CND
      - ASS
      - BRC
      - BRF
      - ECN
      - EXE
      - OSO
      - REC
      - SCN
      - SUS
  SymbolDetail:
    description: SymbolDetail provides details about a symbol that do not change frequently
    properties:
      AssetType:
        description: The symbol asset type
        type: string
      Country:
        description: The associated country of the symbol
        type: string
      Currency:
        description: The currency the symbol trades in
        type: string
      Description:
        description: The description of the symbol
        type: string
      Exchange:
        description: The exchange the symbol trades in
        type: string
      ExpirationDate:
        $ref: "#/definitions/Date"
      FutureType:
        description: Future Type - applies to futures
        type: string
      OptionType:
        $ref: "#/definitions/CallPut"
      PriceFormat:
        $ref: "#/definitions/SchemeDescriptor"
      QuantityFormat:
        $ref: "#/definitions/SchemeDescriptor"
      Root:
        description: The root
        type: string
      StrikePrice:
        $ref: "#/definitions/Decimal"
      Symbol:
        description: The Symbol name or abbreviation
        type: string
      Underlying:
        description: The underlying symbol
        type: string
      "0":
        type: string
        description: For an option order, the strike price for the Put or Call.
    type: object
  Time:
    description: |-
      Programs using times should typically store and pass them as values,
      not pointers. That is, time variables and struct fields should be of
      type time.Time, not *time.Time.

      A Time value can be used by multiple goroutines simultaneously except
      that the methods GobDecode, UnmarshalBinary, UnmarshalJSON and
      UnmarshalText are not concurrency-safe.

      Time instants can be compared using the Before, After, and Equal methods.
      The Sub method subtracts two instants, producing a Duration.
      The Add method adds a Time and a Duration, producing a Time.

      The zero value of type Time is January 1, year 1, 00:00:00.000000000 UTC.
      As this time is unlikely to come up in practice, the IsZero method gives
      a simple way of detecting a time that has not been initialized explicitly.

      Each Time has associated with it a Location, consulted when computing the
      presentation form of the time, such as in the Format, Hour, and Year methods.
      The methods Local, UTC, and In return a Time with a specific location.
      Changing the location in this way changes only the presentation; it does not
      change the instant in time being denoted and therefore does not affect the
      computations described in earlier paragraphs.

      Representations of a Time value saved by the GobEncode, MarshalBinary,
      MarshalJSON, and MarshalText methods store the Time.Location's offset, but not
      the location name. They therefore lose information about Daylight Saving Time.

      In addition to the required “wall clock” reading, a Time may contain an optional
      reading of the current process's monotonic clock, to provide additional precision
      for comparison or subtraction.
      See the “Monotonic Clocks” section in the package documentation for details.

      Note that the Go == operator compares not just the time instant but also the
      Location and the monotonic clock reading. Therefore, Time values should not
      be used as map or database keys without first guaranteeing that the
      identical Location has been set for all values, which can be achieved
      through use of the UTC or Local method, and that the monotonic clock reading
      has been stripped by setting t = t.Round(0). In general, prefer t.Equal(u)
      to t == u, since t.Equal uses the most accurate comparison available and
      correctly handles the case when only one of its arguments has a monotonic
      clock reading.
    format: date-time
    title: A Time represents an instant in time with nanosecond precision.
    type: string
  TimeInForce:
    description:
      "TimeInForce defines the duration and duration timestamp\ngtc\tGood
      till canceled.\ngtd\tGood till date.\nioc\tImmediate or cancel.\nfok\tFill or
      kill.\nday\tDay till canceled.\nat_the_opening\tAt the opening.\nat_the_close\tAt
      the close.\ngood_till_crossing\tGood till crossing."
    properties:
      Duration:
        $ref: "#/definitions/Duration"
      Expiration:
        $ref: "#/definitions/Date"
    type: object
  TradeAction:
    description: |-
      TradeAction represents the different trade actions that can be sent to or received from WebAPI
      Conveys the intent of the trade
      BUY - crypto, equities and futures
      SELL - crypto, equities and futures
      BUYTOCOVER - equities
      SELLSHORT - equities
      BUYTOOPEN - options
      BUYTOCLOSE - options
      SELLTOOPEN - options
      SELLTOCLOSE - options
    type: string
    enum:
      - BUY
      - SELL
      - BUYTOCOVER
      - SELLSHORT
      - BUYTOOPEN
      - BUYTOCLOSE
      - SELLTOOPEN
      - SELLTOCLOSE
  TrailingStop:
    description: TrailingStop offset; amount or percent
    properties:
      Amount:
        $ref: "#/definitions/Decimal"
      Percent:
        $ref: "#/definitions/Decimal"
      "0":
        type: string
        description:
          "Percentage offset from current price. Note: Mutually exclusive
          with Amount."
    type: object
  Wallets:
    description: Wallets is an array of currency holdings
    properties:
      Wallets:
        items:
          $ref: "#/definitions/wallet"
        type: array
    type: object
  orderErrorResponse:
    properties:
      AccountID:
        description: The AccountID of the error
        type: string
      Error:
        description: The Error
        type: string
      Message:
        description: The error message
        type: string
    title:
      orderErrorResponse is an object supplied when a partial success response
      is returned with some errors.
    type: object
  wallet:
    properties:
      AccountID:
        description: The account ID of the wallet
        type: string
      Balance:
        $ref: "#/definitions/Decimal"
      BalanceAvailableForTrading:
        $ref: "#/definitions/Decimal"
      BalanceAvailableForWithdrawal:
        $ref: "#/definitions/Decimal"
      Currency:
        description: The currency of the wallet
        type: string
      Status:
        description: The status of this wallet - active, suspended
        type: string
      "0":
        type: string
        description: 0
    type: object
host: api.tradestation.com
info:
  contact:
    email: WebApi@tradestation.com
  description:
    The TradeStation v3 API is a streamlined interface to Brokerage functions
    & Market Data
  title: API.
  version: 3.0.1
paths:
  /brokerage/accounts:
    get:
      description:
        Fetches the list of Brokerage Accounts available for the current
        user
      operationId: GetAccounts
      responses:
        "200":
          description: Accounts
          schema:
            $ref: "#/definitions/Accounts"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/accounts/{accounts}/balances:
    get:
      description:
        Fetches the brokerage account `Balances` for one or more given
        accounts
      operationId: GetBalances
      parameters:
        - description: List of accounts in comma separated format. for ex `"61999124,68910124"`
          in: path
          name: accounts
          required: true
          type: string
      responses:
        "200":
          description: Balances
          schema:
            $ref: "#/definitions/Balances"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/accounts/{accounts}/bodbalances:
    get:
      description: Fetches the Beginning of Day Balances for the given Accounts
      operationId: GetBalancesBOD
      parameters:
        - description: List of accounts in comma separated format. for ex `"61999124,68910124"`
          in: path
          name: accounts
          required: true
          type: string
      responses:
        "200":
          description: BalancesBOD
          schema:
            $ref: "#/definitions/BalancesBOD"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/accounts/{accounts}/historicalorders:
    get:
      description: Fetches Historical Orders for the given Accounts
      operationId: GetHistoricalOrders
      parameters:
        - description: List of accounts in comma separated format. for ex `"61999124,68910124"`
          in: path
          name: accounts
          required: true
          type: string
        - description: historical orders since date. for ex `"2006-01-02","01-02-2006","2006/01/02","01/02/2006"`
          in: query
          name: since
          type: string
      responses:
        "200":
          description: Orders
          schema:
            $ref: "#/definitions/Orders"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/accounts/{accounts}/orders:
    get:
      description: Fetches today's orders for the given Accounts
      operationId: GetOrders
      parameters:
        - description: List of accounts in comma separated format for ex `"61999124,68910124"`
          in: path
          name: accounts
          required: true
          type: string
      responses:
        "200":
          description: Orders
          schema:
            $ref: "#/definitions/Orders"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/accounts/{accounts}/positions:
    get:
      description: Fetches positions for the given Accounts
      operationId: GetPositions
      parameters:
        - description: List of accounts in comma separated format for ex `"61999124,68910124"`
          in: path
          name: accounts
          required: true
          type: string
      responses:
        "200":
          description: Positions
          schema:
            $ref: "#/definitions/Positions"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/accounts/{accounts}/wallets:
    get:
      description: Fetches crypto wallet information
      operationId: GetWallets
      parameters:
        - description: List of accounts in comma separated format. for ex `"61999124,68910124"`
          in: path
          name: accounts
          required: true
          type: string
      responses:
        "200":
          description: Wallets
          schema:
            $ref: "#/definitions/Wallets"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/orderconfirm:
    post:
      description: Creates an Order Confirmation to validate an Order
      operationId: ConfirmOrder
      parameters:
        - description: Order Confirmation Request
          in: body
          name: order
          schema:
            $ref: "#/definitions/OrderConfirmRequest"
            description: Order Confirmation Request
            type: object
      responses:
        "200":
          description: OrderConfirmResponse
          schema:
            items:
              $ref: "#/definitions/OrderConfirmResponse"
            type: array
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/ordergroupconfirm:
    post:
      description: Creates an Order Confirmation for a group order
      operationId: ConfirmGroupOrder
      parameters:
        - description: Order request
          in: body
          name: orderRequest
          required: true
          schema:
            $ref: "#/definitions/GroupOrderRequest"
            description: Order request
            type: object
      responses:
        "200":
          description: OrderConfirmResponse
          schema:
            items:
              $ref: "#/definitions/OrderConfirmResponse"
            type: array
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/ordergroups:
    post:
      description: Creates a group order
      operationId: PlaceGroupOrder
      parameters:
        - description: Order request to place
          in: body
          name: orderRequest
          required: true
          schema:
            $ref: "#/definitions/GroupOrderRequest"
            description: Order request to place
            type: object
      responses:
        "200":
          description: OrderResponse
          schema:
            items:
              $ref: "#/definitions/OrderResponse"
            type: array
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/orders:
    post:
      description: Creates a new brokerage order
      operationId: PlaceOrder
      parameters:
        - description: Order to place
          in: body
          name: orderRequest
          required: true
          schema:
            $ref: "#/definitions/OrderRequest"
            description: Order to place
            type: object
      responses:
        "200":
          description: OrderResponse
          schema:
            items:
              $ref: "#/definitions/OrderResponse"
            type: array
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /brokerage/orders/{orderID}:
    delete:
      description: Cancels an active order
      operationId: CancelOrder
      parameters:
        - description: Order ID to cancel
          in: path
          name: orderID
          required: true
          type: string
      responses:
        "200":
          description: OrderResponse
          schema:
            $ref: "#/definitions/OrderResponse"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
    put:
      description: Replaces an active order with a modified version of that order
      operationId: ReplaceOrder
      parameters:
        - description: OrderID for order to replace
          in: path
          name: orderID
          required: true
          type: string
        - description: Order to replace
          in: body
          name: orderRequest
          required: true
          schema:
            $ref: "#/definitions/OrderReplaceRequest"
            description: Order to replace
            type: object
      responses:
        "200":
          description: OrderResponse
          schema:
            $ref: "#/definitions/OrderResponse"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - Brokerage
  /marketdata/barcharts/{symbol}:
    get:
      description: Fetches marketdata bars for the given symbol, interval, and timeframe
      operationId: GetBars
      parameters:
        - description: The symbol string.
          in: path
          name: symbol
          required: true
          type: string
        - description: The interval
          in: query
          name: interval
          required: true
          type: string
        - description: The unit
          in: query
          name: unit
          required: true
          type: string
        - description: The bars back
          in: query
          name: barsBack
          required: true
          type: string
        - description: The start date
          in: query
          name: startDate
          required: true
          type: string
      responses:
        "200":
          description: Bars
          schema:
            $ref: "#/definitions/Bars"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - MarketData
  /marketdata/stream/barcharts/{symbol}:
    get:
      description: Streams marketdata bars for the given symbol, interval, and timeframe
      operationId: StreamBars
      parameters:
        - description: The symbol string.
          in: path
          name: symbol
          required: true
          type: string
        - description:
            "Represents bar periodicity -  for minute bars, the number of
            minutes aggregated in a single bar.  For crypto symbols, valid values are:
            1,5,15,30,60,240,80.  For bar units other than minute, for all symbols,
            value must be 1."
          in: query
          name: interval
          required: true
          type: string
        - description: "valid values: minute, daily, weekly, monthly."
          in: query
          name: unit
          required: true
          type: string
        - description:
            The bars back - for crypto symbols, the max value is 500. for
            non-crypto the max value is 57600
          in: query
          name: barsBack
          type: string
      produces:
        - application/vnd.tradestation.streams.v2+json
      responses:
        "200":
          description: Bar
          schema:
            $ref: "#/definitions/Bar"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - MarketData
  /marketdata/stream/quotes/{symbols}:
    get:
      description: Streams Quote Changes for a one or more symbols
      operationId: GetQuoteChangeStream
      parameters:
        - description: List of symbols in comma separated format. for ex `"MSFT,BTCUSD"`
          in: path
          name: symbols
          required: true
          type: string
      produces:
        - application/vnd.tradestation.streams.v2+json
      responses:
        "200":
          description: QuoteStream
          schema:
            $ref: "#/definitions/QuoteStream"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - MarketData
  /marketdata/symbols/{symbols}:
    get:
      description: Fetches symbol details for a one or more symbols
      operationId: GetSymbolDetails
      parameters:
        - description: List of symbols in comma separated format. for ex `"MSFT,BTCUSD"`
          in: path
          name: symbols
          required: true
          type: string
      responses:
        "200":
          description: SymbolDetail
          schema:
            $ref: "#/definitions/SymbolDetail"
        "400":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "429":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
        "504":
          description: ErrorResponse
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - MarketData
produces:
  - application/json
schemes:
  - https
securityDefinitions:
  TradeStationAuth:
    authorizationUrl: https://login.tradestation.com/authorize
    description: TradeStation's OpenID Connect[OIDC] Auth provider
    flow: accessCode
    scopes:
      Crypto: Grants access to Cryptocurrency trading & marketdata
      MarketData: Grants access to Market Data
      Matrix: Grants marketdata access to Matrix data
      ReadAccount: Grants read access to Brokerage Account
      Trade: Grants access to submit Orders to execute trades
    tokenUrl: https://login.tradestation.com/authorize
    type: oauth2
swagger: "2.0"
