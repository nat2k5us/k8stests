apiVersion: v1
kind: Service
metadata:
  name: hello-lifecycle-svc
  labels:
    app: hello-lifecycle
spec:
  selector:
    app: hello-lifecycle
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-lifecycle
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-lifecycle
  template:
    metadata:
      labels:
        app: hello-lifecycle
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: init
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nslookup hello-lifecycle-svc.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for lifecycle; sleep 3; done",
            ]
      containers:
        - name: lifecycle-container
          image: busybox
          readinessProbe:
            exec:
              command:
                ["sh", "-c", "echo $(date +%H:%M:%S): readinessProbe is ready"]
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 1
          lifecycle:
            postStart:
              exec:
                command:
                  [
                    "sh",
                    "-c",
                    "echo $(date +%H:%M:%S): lifecycle > postStart > Main Container is Running | tee -a /timing && echo $(date +%H:%M:%S): postStart >> /timing && sleep 10 && touch /tmp/ready /tmp/live  && echo $(date +%H:%M:%S): end postStart >> /timing",
                  ]
            preStop:
              exec:
                command:
                  [
                    "sh",
                    "-c",
                    "echo $(date +%H:%M:%S): lifecycle > preStop >> /timing && sleep 10 && rm -f /tmp/ready /tmp/live && echo $(date +%H:%M:%S): end preStop >> /timing",
                  ]
